AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: 'serverless-microservice-java

  Sample SAM Template for serverless-microservice-java

  '
Globals:
  Function:
    Timeout: 10
Resources:
  ItemsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: ItemsTable
      AttributeDefinitions:
      - AttributeName: id
        AttributeType: S
      KeySchema:
      - AttributeName: id
        KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1
  CreateItemFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: com.serverless.CreateItemHandler::handleRequest
      Runtime: java11
      CodeUri: CreateItemFunction
      MemorySize: 512
      Policies:
      - Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Action:
          - dynamodb:PutItem
          Resource:
            Fn::GetAtt:
            - ItemsTable
            - Arn
      Environment:
        Variables:
          TABLE_NAME: ItemsTable
      Events:
        CreateItemApi:
          Type: Api
          Properties:
            Path: /items
            Method: post
    Metadata:
      SamResourceId: CreateItemFunction
  GetItemFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: com.serverless.GetItemHandler::handleRequest
      Runtime: java11
      CodeUri: GetItemFunction
      MemorySize: 512
      Policies:
      - Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Action:
          - dynamodb:GetItem
          Resource:
            Fn::GetAtt:
            - ItemsTable
            - Arn
      Environment:
        Variables:
          TABLE_NAME: ItemsTable
      Events:
        GetItemApi:
          Type: Api
          Properties:
            Path: /items/{id}
            Method: get
    Metadata:
      SamResourceId: GetItemFunction
  UpdateItemFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: com.serverless.UpdateItemHandler::handleRequest
      Runtime: java11
      CodeUri: UpdateItemFunction
      MemorySize: 512
      Policies:
      - Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Action:
          - dynamodb:UpdateItem
          Resource:
            Fn::GetAtt:
            - ItemsTable
            - Arn
      Environment:
        Variables:
          TABLE_NAME: ItemsTable
      Events:
        UpdateItemApi:
          Type: Api
          Properties:
            Path: /items/{id}
            Method: put
    Metadata:
      SamResourceId: UpdateItemFunction
  DeleteItemFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: com.serverless.DeleteItemHandler::handleRequest
      Runtime: java11
      CodeUri: DeleteItemFunction
      MemorySize: 512
      Policies:
      - Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Action:
          - dynamodb:DeleteItem
          Resource:
            Fn::GetAtt:
            - ItemsTable
            - Arn
      Environment:
        Variables:
          TABLE_NAME: ItemsTable
      Events:
        DeleteItemApi:
          Type: Api
          Properties:
            Path: /items/{id}
            Method: delete
    Metadata:
      SamResourceId: DeleteItemFunction
Outputs:
  CreateItemFunction:
    Description: Create Item Lambda Function ARN
    Value:
      Fn::GetAtt:
      - CreateItemFunction
      - Arn
  GetItemFunction:
    Description: Get Item Lambda Function ARN
    Value:
      Fn::GetAtt:
      - GetItemFunction
      - Arn
  UpdateItemFunction:
    Description: Update Item Lambda Function ARN
    Value:
      Fn::GetAtt:
      - UpdateItemFunction
      - Arn
  DeleteItemFunction:
    Description: Delete Item Lambda Function ARN
    Value:
      Fn::GetAtt:
      - DeleteItemFunction
      - Arn
  ItemsTable:
    Description: DynamoDB Table ARN
    Value:
      Fn::GetAtt:
      - ItemsTable
      - Arn
  ApiGatewayInvokeURL:
    Description: API Gateway base URL
    Value:
      Fn::Sub: https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/
